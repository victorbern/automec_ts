generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:@localhost:3306/automec_v7"
}

model Cliente {
  idCliente       Int            @id @default(autoincrement())
  nomeCliente     String?        @db.VarChar(60)
  cpfCnpj         String?        @unique(map: "cpfCnpj") @db.VarChar(18)
  celularCliente  String?        @db.VarChar(20)
  telefoneCliente String?        @db.VarChar(20)
  cep             String?        @db.VarChar(14)
  endereco        String?        @db.VarChar(60)
  numero          String?        @db.VarChar(6)
  bairro          String?        @db.VarChar(60)
  cidade          String?        @db.VarChar(60)
  uf              String?        @db.VarChar(2)
  complemento     String?        @db.VarChar(60)
  ordemservico    OrdemServico[]
  veiculo         Veiculo[]
}

model DetalhePagamento {
  idDetalhePagamento Int        @id @default(autoincrement())
  idOrdemServico     Int?
  idPagamento        Int?
  pagamento          Pagamento? @relation(fields: [idPagamento], references: [idPagamento], onDelete: Restrict, onUpdate: Restrict, map: "detalhepagamento_ibfk_1")

  @@index([idPagamento], map: "idPagamento")
}

model ExecutaFuncao {
  idOSDetalhes  Int
  idFuncionario Int
  idServico     Int
  observacao    String?     @db.VarChar(45)
  quantidade    Int?
  osdetalhes    OSDetalhes  @relation(fields: [idOSDetalhes], references: [idOSDetalhes], onUpdate: Restrict, map: "executafuncao_ibfk_1")
  funcionario   Funcionario @relation(fields: [idFuncionario], references: [idFuncionario], onUpdate: Restrict, map: "executafuncao_ibfk_2")
  servico       Servico     @relation(fields: [idServico], references: [idServico], onUpdate: Restrict, map: "executafuncao_ibfk_3")

  @@id([idOSDetalhes, idFuncionario, idServico])
  @@index([idFuncionario], map: "idFuncionario")
  @@index([idServico], map: "idServico")
}

model Funcionario {
  idFuncionario   Int             @id @default(autoincrement())
  nomeFuncionario String?         @db.VarChar(60)
  isAtivo         String?         @db.VarChar(3)
  funcao          String?         @db.VarChar(45)
  executafuncao   ExecutaFuncao[]
}

model OrdemServico {
  idOrdemServico Int          @id @default(autoincrement())
  total          Float?       @db.Float
  km             Int?
  isFinalizada   Boolean?     @default(false)
  isPaga         Boolean?     @default(false)
  placaVeiculo   String?      @db.VarChar(8)
  idCliente      Int?
  cliente        Cliente?     @relation(fields: [idCliente], references: [idCliente], onDelete: Restrict, onUpdate: Restrict, map: "ordemservico_ibfk_1")
  osdetalhes     OSDetalhes[]

  @@index([idCliente], map: "idCliente")
}

model OSDetalhes {
  idOSDetalhes           Int                      @id @default(autoincrement())
  dataOS                 DateTime?                @db.DateTime(0)
  idOrdemServico         Int?
  executafuncao          ExecutaFuncao[]
  ordemservico           OrdemServico?            @relation(fields: [idOrdemServico], references: [idOrdemServico], onDelete: Restrict, onUpdate: Restrict, map: "osdetalhes_ibfk_1")
  produto_has_osdetalhes Produto_has_OSDetalhes[]

  @@index([idOrdemServico], map: "idOrdemServico")
}

model Pagamento {
  idPagamento      Int                @id @default(autoincrement())
  dataHora         DateTime?          @db.DateTime(0)
  subtotal         Float?             @db.Float
  total            Float?             @db.Float
  desconto         Float?             @db.Float
  formaPagamento   String?            @db.VarChar(45)
  detalhepagamento DetalhePagamento[]
  vendadireta      VendaDireta[]
}

model Produto {
  codigoBarras            String                    @id @db.VarChar(45)
  descricao               String?                   @db.VarChar(45)
  valorCusto              Float?                    @db.Float
  quantidadeEstoque       Int?
  precoVenda              Float?                    @db.Float
  produto_has_osdetalhes  Produto_has_OSDetalhes[]
  produto_has_vendadireta Produto_has_VendaDireta[]
}

model Produto_has_OSDetalhes {
  idOSDetalhes      Int
  codigoBarras      String     @db.VarChar(45)
  quantidadeVendida Int?
  precoTotal        Float?     @db.Float
  precoUnitario     Float?     @db.Float
  osdetalhes        OSDetalhes @relation(fields: [idOSDetalhes], references: [idOSDetalhes], onUpdate: Restrict, map: "produto_has_osdetalhes_ibfk_1")
  produto           Produto    @relation(fields: [codigoBarras], references: [codigoBarras], onUpdate: Restrict, map: "produto_has_osdetalhes_ibfk_2")

  @@id([idOSDetalhes, codigoBarras])
  @@index([codigoBarras], map: "codigoBarras")
}

model Produto_has_VendaDireta {
  codigoBarras      String      @db.VarChar(45)
  idVendaDireta     Int
  quantidadeVendida Int?
  precoTotal        Float?      @db.Float
  precoUnitario     Float?      @db.Float
  produto           Produto     @relation(fields: [codigoBarras], references: [codigoBarras], onUpdate: Restrict, map: "produto_has_vendadireta_ibfk_1")
  vendadireta       VendaDireta @relation(fields: [idVendaDireta], references: [idVendaDireta], onUpdate: Restrict, map: "produto_has_vendadireta_ibfk_2")

  @@id([codigoBarras, idVendaDireta])
  @@index([idVendaDireta], map: "idVendaDireta")
}

model Servico {
  idServico        Int             @id @default(autoincrement())
  descricaoServico String?         @db.VarChar(60)
  precoServico     Float?
  executafuncao    ExecutaFuncao[]
}

model Veiculo {
  placaVeiculo   String   @id @db.VarChar(8)
  marca          String?  @db.VarChar(45)
  modelo         String?  @db.VarChar(45)
  ano            Int?
  capacidadeOleo Float?
  cor            String?  @db.VarChar(45)
  idCliente      Int?
  cliente        Cliente? @relation(fields: [idCliente], references: [idCliente], onDelete: Restrict, onUpdate: Restrict, map: "veiculo_ibfk_1")

  @@index([idCliente], map: "idCliente")
}

model VendaDireta {
  idVendaDireta           Int                       @id @default(autoincrement())
  idPagamento             Int?
  total                   Float?                    @db.Float
  dataHora                DateTime?                 @db.DateTime(0)
  produto_has_vendadireta Produto_has_VendaDireta[]
  pagamento               Pagamento?                @relation(fields: [idPagamento], references: [idPagamento], onDelete: Restrict, onUpdate: Restrict, map: "vendadireta_ibfk_1")

  @@index([idPagamento], map: "idPagamento")
}
